[pytest]
# ✅ Detailed test execution with structured logging & reporting
addopts = -v -s --tb=short --maxfail=5 --show-capture=stdout --self-contained-html --alluredir=reports/allure_results

# ✅ Define test paths to avoid scanning unnecessary files
testpaths = tests
asyncio_mode = auto

# ✅ Enable real-time logging for better test visibility
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# ✅ Store detailed log output in a file for later analysis
log_file = logs/test_run.log
log_file_level = INFO
log_file_format = %(asctime)s [%(levelname)s] %(filename)s:%(lineno)s - %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# ✅ Define test markers for better test categorization
markers =
    demo: Demo for dev testing
    negative: error cases, for invilded data cases

[flake8]
# ✅ Allow longer lines (88 characters) for better readability
max-line-length = 88
max-complexity = 12

# ✅ Exclude virtual environments to improve performance
exclude = venv/, .tox/

# ✅ Specify error types to check
select = C,E,F,W,B,B950

# ✅ Ignore unnecessary errors for cleaner reports
ignore = E203, E501, W503


[allure]
# ✅ Ensure Allure test results are properly stored and accessible
report_dir = reports/allure_results
